-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Test where

import Daml.Script

import Asset
import Shop

data Fixture = Fixture with
  issuer : Party
  producer : Party
  owner : Party
  vendor : Party
  user : Party
  shopId : ShopId
  itemId : ItemId
  iouId : IouId
  vendorId : VendorRelationshipId
  userId : UserRelationshipId

data Test a b = Test with
  given : Script a
  when : a -> Script b
  then_ : a -> b -> Script Bool

run : Test a b -> Script ()
run t = do
  fixture <- t.given
  result <- t.when fixture
  check <- t.then_ fixture result
  assert $ check

given_a_shop : Script Fixture
given_a_shop = do
  issuer <- allocateParty "Issuer"
  producer <- allocateParty "Producer"
  owner <- allocateParty "Owner"
  vendor <- allocateParty "Vendor"
  user <- allocateParty "User"

  itemId <- submit producer do createCmd Item with producer; owner = producer; label = "Apple"; quantity = 1.0; unit = "kg"; observers = []
  itemId <- submit producer do exerciseCmd itemId TransferItem with newOwner = vendor
  iouId <- submit issuer do createCmd Iou with issuer; owner = issuer; amount = 3.0; currency = "USD"
  iouId <- submit issuer do exerciseCmd iouId TransferIou with newOwner = user

  shopId <- submit owner do createCmd Shop with owner; vendors = []; users = []; offerIds = []
  (shopId, inviteId) <- submit owner do exerciseCmd shopId InviteVendor with vendor
  vendorId <- submit vendor do exerciseCmd inviteId AcceptVendorInvite
  (shopId, inviteId) <- submit owner do exerciseCmd shopId InviteUser with user
  userId <- submit user do exerciseCmd inviteId AcceptUserInvite
  pure Fixture with ..

when_the_vendor_offers_an_item : Fixture -> Script (ShopId, OfferId)
when_the_vendor_offers_an_item f = do
  submit f.vendor do exerciseCmd f.vendorId OfferItem with shopId = f.shopId; itemId = f.itemId; price = 1.0; currency = "USD"

then_the_offer_is_added_to_the_shop : Fixture -> (ShopId, OfferId) -> Script Bool
then_the_offer_is_added_to_the_shop f (shopId, offerId) = do
  Some shop <- queryContractId f.owner shopId
  pure $ offerId `elem` shop.offerIds

then_the_offer_is_visible_to_the_user : Fixture -> (ShopId, OfferId) -> Script Bool
then_the_offer_is_visible_to_the_user f (shopId, offerId) = do
  Some _ <- queryContractId f.user offerId
  pure True

when_an_item_is_bought : Fixture -> Script (ShopId, ItemId, IouId)
when_an_item_is_bought f = do
  let Fixture{..} = f
  (shopId, offerId) <- submit vendor do exerciseCmd vendorId OfferItem with price = 3.0; currency = "USD"; ..
  submit user do exerciseCmd userId BuyItem with ..

then_the_item_and_iou_exchange_hands : Fixture -> (ShopId, ItemId, IouId) -> Script Bool
then_the_item_and_iou_exchange_hands f (shopId, itemId, iouId) = do
  Some item <- queryContractId f.user itemId
  Some iou <- queryContractId f.vendor iouId
  pure $ item.owner == f.user && iou.owner == f.vendor

gwt = script do
  let offer_added = Test with
        given = given_a_shop
        when = when_the_vendor_offers_an_item
        then_ = then_the_offer_is_added_to_the_shop
  let offer_user_visible = offer_added with
        then_ = then_the_offer_is_visible_to_the_user
  let asset_exchange = Test with
        given = given_a_shop
        when = when_an_item_is_bought
        then_ = then_the_item_and_iou_exchange_hands
  run offer_added
  run offer_user_visible
  run asset_exchange

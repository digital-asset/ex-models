daml 1.2
module Transferable where

import Asset


template Asset t => Transferable t
  with
    issuer    : Party
    owner     : Party
    observers : [Party]
  where
    signatory issuer, owner

    observer observers

    key (issuer, owner) : (Party, Party)

    maintainer key._2

    controller owner can
      nonconsuming TransferToNewOwner : ContractId t
        with
          assetCid : ContractId t
          newOwner : Party
        do
          assert (newOwner /= owner)
          asset <- fetch assetCid
          assert (asset.owner == owner)
          assert (asset.issuer == issuer)
          archive assetCid
          create asset with owner = newOwner

      DiscloseTransferable : ContractId (Transferable t)
        with
          party : Party
        do
          create this
            with observers = if elem party observers
                  then observers else party :: observers
